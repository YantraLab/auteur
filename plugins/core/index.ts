// Fix: Added React import to use React.createElement for component definitions in a .ts file.
import React from 'react';
import { registerPlugin } from '../../pluginSystem/pluginRegistry';
import { PlusIcon, ImageIcon } from '../../components/icons';
import { SparklesIcon, DocumentTextIcon } from '../../components/icons';

// Import View Components
import { IdeaBoardView } from '../../components/board_views/IdeaBoardView';
import { MoodboardView } from '../../components/board_views/MoodboardView';
import { StoryboardView, StoryboardFooter } from '../../components/board_views/StoryboardView';
import { MarkdownRenderer } from '../../components/MarkdownRenderer';
import { EquipmentChecklistBoard } from '../../components/board_views/EquipmentChecklistBoard';
import { BudgetBoard } from '../../components/board_views/BudgetBoard';
import { CharacterProfileBoard } from '../../components/board_views/CharacterProfileBoard';
import { CharacterChromaView } from '../../components/board_views/CharacterChromaView';
import { StoryTreatmentBoard } from '../../components/board_views/StoryTreatmentBoard';
import { CrewContactListBoard } from '../../components/board_views/CrewContactListBoard';
import { CrewContactCardView } from '../../components/board_views/CrewContactCardView';
import { GenericDocumentBoard } from '../../components/board_views/GenericDocumentBoard';
// Fix: Import types required for component props.
import type { BoardPlugin, BoardComponentProps } from '../../pluginSystem/pluginTypes';
import type { Board } from '../../types';


// Fix: Defined a props type for header action components.
type HeaderActionProps = { board: Board; addNoteToBoard: (id: string) => void; triggerImageUpload: (id: string) => void; };

// Fix: Replaced JSX with React.createElement to be valid in a .ts file.
const TextNoteActions = ({ board, addNoteToBoard }: HeaderActionProps) => (
    React.createElement('button', { onClick: () => addNoteToBoard(board.id), className: "p-1 rounded-md bg-brand-muted hover:bg-brand-primary/20 text-brand-text-dim hover:text-brand-primary transition-colors", title: "Add Text Note" }, React.createElement(PlusIcon, { className: "w-4 h-4" }))
);

const ImageNoteActions = ({ board, triggerImageUpload }: HeaderActionProps) => (
    React.createElement('button', { onClick: () => triggerImageUpload(board.id), className: "p-1 rounded-md bg-brand-muted hover:bg-brand-primary/20 text-brand-text-dim hover:text-brand-primary transition-colors", title: "Add Image" }, React.createElement(ImageIcon, { className: "w-4 h-4" }))
);


const CORE_PLUGINS: BoardPlugin[] = [
    {
        type: 'IDEABOARD',
        title: 'Ideaboard',
        description: 'Jot down text notes and concepts.',
        icon: SparklesIcon,
        boardComponent: IdeaBoardView,
        headerActionsComponent: TextNoteActions,
    },
    {
        type: 'MOODBOARD',
        title: 'Moodboard',
        description: 'Collect inspirational images.',
        icon: ImageIcon,
        boardComponent: MoodboardView,
        headerActionsComponent: ImageNoteActions,
    },
    {
        type: 'STORYBOARD',
        title: 'Storyboard',
        description: 'Plan shots and narrative flow.',
        icon: ImageIcon,
        boardComponent: StoryboardView,
        headerActionsComponent: ImageNoteActions,
        footerComponent: StoryboardFooter,
    },
    {
        type: 'GENERATED_CONTENT',
        title: 'Generated Content',
        description: 'Content generated by AI.',
        icon: SparklesIcon,
        // Fix: Replaced JSX with React.createElement and correctly typed props.
        boardComponent: ({ board }: BoardComponentProps) => board.content ? React.createElement(MarkdownRenderer, { content: board.content }) : React.createElement('div', { className: "text-center text-brand-text-dim" }, "No content generated yet."),
    },
    // Fix: Corrected multiple syntax errors from comma (,) to colon (:) in object property definitions below.
    {
        type: 'DOCUMENT_STORY_TREATMENT',
        title: 'Story Treatment',
        description: 'Outline your story narrative.',
        icon: DocumentTextIcon,
        boardComponent: StoryTreatmentBoard,
    },
    {
        type: 'DOCUMENT_SHOT_LIST',
        title: 'Shot List',
        description: 'Detail every shot for your shoot.',
        icon: DocumentTextIcon,
        boardComponent: GenericDocumentBoard,
    },
    {
        type: 'DOCUMENT_CHARACTER_PROFILE',
        title: 'Characters Profile',
        description: 'Develop your characters in detail.',
        icon: DocumentTextIcon,
        boardComponent: CharacterProfileBoard,
        fullscreenComponent: CharacterChromaView,
    },
    {
        type: 'DOCUMENT_SCRIPT_BREAKDOWN',
        title: 'Script Breakdown',
        description: 'Break down scenes for production.',
        icon: DocumentTextIcon,
        boardComponent: GenericDocumentBoard,
    },
    {
        type: 'DOCUMENT_CALL_SHEET',
        title: 'Call Sheet',
        description: 'Organize daily shooting schedules.',
        icon: DocumentTextIcon,
        boardComponent: GenericDocumentBoard,
    },
    {
        type: 'DOCUMENT_BUDGET',
        title: 'Budget',
        description: 'Manage your project\'s finances.',
        icon: DocumentTextIcon,
        boardComponent: BudgetBoard,
    },
    {
        type: 'DOCUMENT_EQUIPMENT_CHECKLIST',
        title: 'Equipment Checklist',
        description: 'Track your gear for shoots.',
        icon: DocumentTextIcon,
        boardComponent: EquipmentChecklistBoard,
    },
    {
        type: 'DOCUMENT_CREW_CONTACT_LIST',
        title: 'Crew Contact List',
        description: 'Keep your crew\'s info handy.',
        icon: DocumentTextIcon,
        boardComponent: CrewContactListBoard,
        fullscreenComponent: CrewContactCardView,
    },
    {
        type: 'DOCUMENT_CONTINUITY_LOG',
        title: 'Continuity Log',
        description: 'Track continuity between shots.',
        icon: DocumentTextIcon,
        boardComponent: GenericDocumentBoard,
    }
];

export function initializeCorePlugins() {
    CORE_PLUGINS.forEach(registerPlugin);
}